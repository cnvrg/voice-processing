# Copyright (c) 2023 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

title: Voice Processing Inference
version: 1.0.0
description: Training whisper ai model to convert english text to speech 
long_description: Training whisper ai model to convert english text to speech
author: "cnvrg"
author_email: "libhub@cnvrg.io"

tags:
  - inference

tasks:
  - title: inference
    top: 400
    left: 300
 
    type: deploy

    library: voice-processing-inference
    library_version: 1.0.0

    command: python3 stt.py
    kind: webservice
    requirements:
      cpu: 3.5
      memory: 16
      gpu: 0
      hpu: 0

    image: python:3.8.10
    language: python3

    accept_files: false

    file_name: stt_inf.py
    flask_config:
    - key: DEBUG
      value: 'True'
    - key: TESTING
      value: 'True'
    function_name: predict
    gunicorn_config:
      - key: workers
        value: '1'
    prep_file: ''
    prep_function: ''
    input_example:
      file: text
      language: text
      model_size: text
    input_schema:
      file: text
      language: text
      model_size: text
    output_schema: {}
      
relations: []